version: "3"
services:
  traefik:
    image: traefik:v2.3
    container_name: traefik
    networks:
      - prereview-private
      - prereview-public
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=daniela@prereview.org"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - "/certs:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  prereview:
    image: prereview.azurecr.io/prereview:staging
    depends_on:
      - prereview-db
    networks:
      - prereview-private
      - prereview-public
    environment:
      NODE_ENV: staging
      PREREVIEW_LOG_LEVEL: debug
      PREREVIEW_HOST: 0.0.0.0
      PREREVIEW_PORT: 3000
      PREREVIEW_DB_TYPE: postgresql
      PREREVIEW_DB_HOST: prereview-db
      PREREVIEW_DB_PORT: 5432
      PREREVIEW_DB_USER: prereview
      PREREVIEW_DB_NAME: prereview
      PREREVIEW_ORCID_SANDBOX: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prereview.rule=Host(`${PREREVIEW_DOMAIN}`)"
      - "traefik.http.routers.prereview.entrypoints=websecure"
      - "traefik.http.routers.prereview.tls.certresolver=myresolver"

  prereview-db:
    image: postgres:12-alpine
    volumes:
      - prereview-db_data:/var/lib/postgresql/data
    networks:
      - prereview-private
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: prereview
      POSTGRES_PASSWORD: ${PREREVIEW_DB_PASS}
      POSTGRES_DB: prereview

volumes:
  prereview-db_data: {}

networks:
  prereview-private:
    internal: true
  prereview-public:
