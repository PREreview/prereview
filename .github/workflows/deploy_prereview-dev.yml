name: Build and deploy to dev

on:
  push:
    branches:
      - develop

env:
  DOCKER_BUILDKIT: 1
  IMAGE_TAG: ${{ github.sha }}
  REGISTRY_USERNAME: prereview

jobs:

  build:
    runs-on: ubuntu-20.04

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: 'Build dev image'
        run: make build
        env:
          TARGET: 'dev'

      - name: 'Lint'
        run: make lint

      - name: 'Test'
        run: make test

      - name: 'Build image'
        run: make build
        env:
          TARGET: 'prod'

      - name: 'Smoke test'
        run: make smoke-test

      - name: 'Build integration test image'
        run: make build
        env:
          TARGET: 'integration'

      - name: 'Run integration tests'
        run: make integration-test

      - name: 'Store integration test results'
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: integration-tests-results
          path: integration/results

      - name: 'Tag image'
        run: docker tag prereview.azurecr.io/prereview:${IMAGE_TAG} prereview.azurecr.io/prereview:develop

      - name: 'Log in to registry'
        uses: azure/docker-login@v1
        with:
          login-server: prereview.azurecr.io
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: 'Push image'
        run: |
          docker push prereview.azurecr.io/prereview:${IMAGE_TAG}
          docker push prereview.azurecr.io/prereview:develop

  deploy:
    runs-on: ubuntu-20.04
    needs: build

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v2

      - name: 'Log in to Azure'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Deploy app'
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'prereview-dev'
          images: prereview.azurecr.io/prereview:${{ env.IMAGE_TAG }}
          configuration-file: './deploy/docker-compose-dev.yml'
